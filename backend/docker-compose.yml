version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: protocolcopilot-api
    depends_on:
      - db
      - minio
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_EXTERNAL_ENDPOINT=${MINIO_EXTERNAL_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_SECURE=${MINIO_SECURE}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    restart: always

  db:
    image: ankane/pgvector:latest  # includes pgvector preinstalled
    container_name: protocolcopilot-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: protocolcopilot
    ports:
      - "55432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  minio:
    image: minio/minio:latest
    container_name: protocolcopilot-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"   # S3 API endpoint
      - "9001:9001"   # web console
    volumes:
      - minio_data:/data
      - ./setup-minio.sh:/setup-minio.sh
    restart: always

  minio-setup:
    image: minio/mc:latest
    container_name: protocolcopilot-minio-setup
    depends_on:
      - minio
    volumes:
      - ./setup-minio.sh:/setup-minio.sh
    command: /bin/sh -c "chmod +x /setup-minio.sh && /setup-minio.sh"
    restart: "no"

volumes:
  pgdata:
  minio_data:
